{"version":3,"sources":["../node_modules/blip-ds/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","config/constants/blip-portal-destinations.js","config/constants/iframe-message-proxy-actions.js","config/constants/iframe-message-proxy-container.js","services/common-service.js","config/constants/application-actions.js","store/reducers/application.js","config/constants/common-actions.js","store/reducers/common.js","config/constants/user-actions.js","store/reducers/user.js","hooks/useCombinedReducers.js","hooks/store.js","store/index.js","config/constants/routes-path.js","store/connect.js","assets/images/svg/blip-balloon.svg","components/PageHeader/PageHeader.js","components/PageHeader/index.js","components/Button/index.js","components/Button/Button.js","pages/Home/components/Header/index.js","pages/Home/components/Header/Header.jsx","pages/Home/index.js","pages/Home/Home.js","services/application-service.js","store/actions/common.js","components/Card/index.js","components/Card/Card.js","pages/Example/components/Header/index.js","pages/Example/components/Header/Header.jsx","pages/Example/components/StoredData/index.js","pages/Example/components/StoredData/StoredData.js","factory/api.js","hooks/useFetch.js","config/index.js","pages/Example/components/SwrFetchData/index.js","pages/Example/components/SwrFetchData/SwrFetchData.js","utils/sleep.js","pages/Example/index.js","pages/Example/Example.js","store/actions/application.js","routes/Analytics.js","services/analytics.js","routes/index.js","routes/Routes.js","App.js","config/constants/blip-portal-toast-types.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","messaging_hub_service","blip_service","send_command","start_loading","stop_loading","height_change","show_modal","hide_navbar","show_navbar","get_current_language","toast","get_application","has_permissions","get_permissions_object","get_user_context","Actions","CommandMethod","NotificationEvent","IframeMessageProxyActions","withLoading","func","a","IframeMessageProxy","sendMessage","action","IMPConstants","set_application","set_configuration","application_default","application","appInfo","appConfig","applicationReducer","state","type","action_types","payload","set_language","set_loading","common_default","common","language","loading","commonReducer","toLowerCase","set_logged_user","set_user_permission","user_default","user","data","permission","userReducer","useCombinedReducers","useReducer","applicationStore","commonStore","userStore","store","reducers","defaultStore","dispatch","StoreContext","createContext","Provider","children","value","i","length","home","name","path","example_page","returnPropsAsDefault","props","Connect","mapStateToProps","Component","Consumer","storeProps","COLOR_NEUTRAL_DARK_ROOFTOP","PageHeader","title","icon","is_informative","help_text","is_back_navigation","onBackPressed","relatedOptions","className","onClick","data-testid","color","tooltip-text","position","theme","Button","variant","text","arrow","disabled","aria_label","data_testid","aria-label","Header","Home","ConnectTo","history","useHistory","handleNavigation","useCallback","params","push","window","open","src","logo","alt","href","RoutesPath","size","getApplicationData","env","commands_url","full_identity","IMPActions","content","response","getCurrentLanguage","IMPContainer","setLanguage","Card","description","image","image_url","image_type","btn","card_color","text_align","linkable","card_class","classNames","image_class","renderImage","btn_props","bg_color","text_color","btn_class_default","btn_class_active","btn_class","active","renderFooterButton","canRefresh","onRefresh","StoredData","shortName","applicationJson","identifier","API","api","axios","create","baseURL","api_url","interceptors","request","use","config","headerConfig","headers","post","error","reject","useFetch","url","options","shouldRetryOnError","errorRetryCount","errorRetryInterval","useSWR","apiUrl","get","mutate","production","SwrFetchData","useState","setId","useEffect","handleGetPokemon","types","sprites","pokemon_id","getRandomIntInclusive","min","max","Math","ceil","floor","random","other","dream_world","front_default","default_plugin_image","padStart","weight","toFixed","height","sleep","ms","setTimeout","Example","useLocation","example","setExample","getInitialInfo","ApplicationService","app_data","CommonActions","Analytics","segment_key","listen","location","pathname","properties","callback","analytics","page","getPageTitle","filter","item","reduce","t","Routes","exact","component","HomePage","ExamplePage","App","load","user_id","traits","identify","message","ROOT_ID","ROOT_DIV","document","getElementById","ResizeObserver","scrollHeight","observe","ReactDOM","render","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.dedd34c1.chunk.js","sourcesContent":["var map = {\n\t\"./bds-alert-actions.entry.js\": [\n\t\t80,\n\t\t6\n\t],\n\t\"./bds-alert-body.entry.js\": [\n\t\t81,\n\t\t7\n\t],\n\t\"./bds-alert-header.entry.js\": [\n\t\t82,\n\t\t8\n\t],\n\t\"./bds-alert.entry.js\": [\n\t\t83,\n\t\t9\n\t],\n\t\"./bds-autocomplete.entry.js\": [\n\t\t84,\n\t\t10\n\t],\n\t\"./bds-banner.entry.js\": [\n\t\t85,\n\t\t11\n\t],\n\t\"./bds-button_3.entry.js\": [\n\t\t86,\n\t\t12\n\t],\n\t\"./bds-card-color.entry.js\": [\n\t\t87,\n\t\t13\n\t],\n\t\"./bds-checkbox.entry.js\": [\n\t\t88,\n\t\t14\n\t],\n\t\"./bds-chip.entry.js\": [\n\t\t89,\n\t\t15\n\t],\n\t\"./bds-counter-text_2.entry.js\": [\n\t\t90,\n\t\t4\n\t],\n\t\"./bds-expansion-panel-body.entry.js\": [\n\t\t91,\n\t\t16\n\t],\n\t\"./bds-expansion-panel-header.entry.js\": [\n\t\t92,\n\t\t17\n\t],\n\t\"./bds-expansion-panel.entry.js\": [\n\t\t93,\n\t\t18\n\t],\n\t\"./bds-icon.entry.js\": [\n\t\t94,\n\t\t19\n\t],\n\t\"./bds-input-chips.entry.js\": [\n\t\t95,\n\t\t5\n\t],\n\t\"./bds-input-editable.entry.js\": [\n\t\t96,\n\t\t20\n\t],\n\t\"./bds-input-password.entry.js\": [\n\t\t97,\n\t\t21\n\t],\n\t\"./bds-input-phone-number.entry.js\": [\n\t\t98,\n\t\t22\n\t],\n\t\"./bds-loading-spinner.entry.js\": [\n\t\t99,\n\t\t23\n\t],\n\t\"./bds-menu-list-item.entry.js\": [\n\t\t100,\n\t\t24\n\t],\n\t\"./bds-menu-list.entry.js\": [\n\t\t101,\n\t\t25\n\t],\n\t\"./bds-modal-action.entry.js\": [\n\t\t102,\n\t\t26\n\t],\n\t\"./bds-modal-close-button.entry.js\": [\n\t\t103,\n\t\t27\n\t],\n\t\"./bds-modal.entry.js\": [\n\t\t104,\n\t\t28\n\t],\n\t\"./bds-paper.entry.js\": [\n\t\t105,\n\t\t29\n\t],\n\t\"./bds-radio-group.entry.js\": [\n\t\t106,\n\t\t30\n\t],\n\t\"./bds-radio.entry.js\": [\n\t\t107,\n\t\t31\n\t],\n\t\"./bds-select-chips.entry.js\": [\n\t\t108,\n\t\t32\n\t],\n\t\"./bds-select-option.entry.js\": [\n\t\t109,\n\t\t33\n\t],\n\t\"./bds-select.entry.js\": [\n\t\t110,\n\t\t34\n\t],\n\t\"./bds-step.entry.js\": [\n\t\t111,\n\t\t35\n\t],\n\t\"./bds-stepper.entry.js\": [\n\t\t112,\n\t\t36\n\t],\n\t\"./bds-switch.entry.js\": [\n\t\t113,\n\t\t37\n\t],\n\t\"./bds-toast.entry.js\": [\n\t\t114,\n\t\t38\n\t],\n\t\"./bds-tooltip.entry.js\": [\n\t\t115,\n\t\t39\n\t],\n\t\"./bds-typo.entry.js\": [\n\t\t116,\n\t\t40\n\t],\n\t\"./bds-warning.entry.js\": [\n\t\t117,\n\t\t41\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 52;\nmodule.exports = webpackAsyncContext;","const messaging_hub_service = 'MessagingHubService';\nconst blip_service = 'BlipService';\n\nexport { messaging_hub_service, blip_service };\n","const send_command = 'sendCommand';\nconst start_loading = 'startLoading';\nconst stop_loading = 'stopLoading';\nconst height_change = 'heightChange';\nconst show_modal = 'showModal';\nconst hide_navbar = 'hideNavbar';\nconst show_navbar = 'showNavbar';\nconst get_current_language = 'getCurrentLanguage';\nconst toast = 'toast';\nconst get_application = 'getApplication';\nconst has_permissions = 'hasPermissions';\nconst get_permissions_object = 'getPermissionsObject';\nconst get_user_context = 'getUserContext';\n\nexport {\n    send_command,\n    start_loading,\n    stop_loading,\n    height_change,\n    show_modal,\n    hide_navbar,\n    show_navbar,\n    get_current_language,\n    toast,\n    get_application,\n    has_permissions,\n    get_permissions_object,\n    get_user_context\n};\n","import { CommandMethod, CommandStatus, NotificationEvent } from 'lime-js';\nimport * as BlipPortalDestinations from './blip-portal-destinations';\nimport * as IframeMessageProxyActions from './iframe-message-proxy-actions';\n\nconst CommandMethods = CommandMethod;\nconst NotificationEvents = NotificationEvent;\nconst Destinations = BlipPortalDestinations;\nconst Actions = IframeMessageProxyActions;\n\nexport {\n    CommandMethods,\n    CommandStatus,\n    NotificationEvents,\n    Destinations,\n    Actions\n};\n","import { IframeMessageProxy } from 'iframe-message-proxy';\nimport * as IMPConstants from '../config/constants/iframe-message-proxy-container';\n\nconst startLoading = () =>\n    IframeMessageProxy.sendMessage({\n        action: IMPConstants.Actions.start_loading\n    });\n\nconst stopLoading = () =>\n    IframeMessageProxy.sendMessage({\n        action: IMPConstants.Actions.stop_loading\n    });\n\nconst setHeight = (height) =>\n    IframeMessageProxy.sendMessage({\n        action: IMPConstants.Actions.height_change,\n        content: height\n    });\n\nconst showToast = (toast) =>\n    IframeMessageProxy.sendMessage({\n        action: IMPConstants.Actions.toast,\n        content: toast\n    });\n\nconst showModal = (title, body, confirm = 'ok', cancel = 'cancel') =>\n    IframeMessageProxy.sendMessage({\n        action: IMPConstants.Actions.show_modal,\n        content: {\n            title,\n            body,\n            confirm,\n            cancel\n        }\n    });\n\nconst withLoading = async (func) => {\n    startLoading();\n    try {\n        return await func();\n    } finally {\n        stopLoading();\n    }\n};\n\nexport {\n    startLoading,\n    stopLoading,\n    setHeight,\n    showToast,\n    withLoading,\n    showModal\n};\n","const set_application = 'setApplication';\nconst set_configuration = 'setConfiguration';\n\nexport { set_application, set_configuration };\n","import * as action_types from '../../config/constants/application-actions';\n\nconst application_default = {\n    application: {\n        appInfo: {},\n        appConfig: {}\n    }\n};\n\nconst applicationReducer = (state = application_default, action = {}) => {\n    switch (action.type) {\n        case action_types.set_application:\n            return {\n                application: {\n                    ...state.application,\n                    appInfo: action.payload\n                }\n            };\n        case action_types.set_configuration:\n            return {\n                application: {\n                    ...state.application,\n                    appConfig: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport { application_default };\nexport default applicationReducer;\n","const set_language = 'setLanguage';\nconst set_loading = 'setLoading';\n\nexport { set_language, set_loading };\n","import * as action_types from '../../config/constants/common-actions';\n\nconst common_default = {\n    common: {\n        language: 'pt',\n        loading: false\n    }\n};\n\nconst commonReducer = (state = common_default, action = {}) => {\n    switch (action.type) {\n        case action_types.set_language:\n            return {\n                common: {\n                    ...state.common,\n                    language: action.payload.toLowerCase()\n                }\n            };\n        case action_types.set_loading:\n            return { common: { ...state.common, loading: action.payload } };\n        default:\n            return state;\n    }\n};\n\nexport { common_default };\nexport default commonReducer;\n","const set_logged_user = 'setLoggedUser';\nconst set_user_permission = 'setUserPermission';\n\nexport { set_logged_user, set_user_permission };\n","import * as action_types from '../../config/constants/user-actions';\n\nconst user_default = {\n    user: {\n        data: {},\n        permission: ''\n    }\n};\n\nconst userReducer = (state = user_default, action = {}) => {\n    switch (action.type) {\n        case action_types.set_logged_user:\n            return { user: { ...state.user, data: action.payload } };\n        case action_types.set_user_permission:\n            return {\n                user: {\n                    ...state.user,\n                    permission: action.payload\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport { user_default };\nexport default userReducer;\n","import { useReducer } from 'react';\nimport applicationReducer, {\n    application_default\n} from '../store/reducers/application';\nimport commonReducer, { common_default } from '../store/reducers/common';\nimport userReducer, { user_default } from '../store/reducers/user';\n\nconst useCombinedReducers = () => {\n    const [applicationStore, application] = useReducer(\n        applicationReducer,\n        application_default\n    );\n    const [commonStore, common] = useReducer(commonReducer, common_default);\n    const [userStore, user] = useReducer(userReducer, user_default);\n\n    return {\n        store: { ...applicationStore, ...commonStore, ...userStore },\n        reducers: [application, common, user]\n    };\n};\n\nexport default useCombinedReducers;\n","import { useContext, createContext } from 'react';\nimport { application_default } from '../store/reducers/application';\nimport { common_default } from '../store/reducers/common';\nimport { user_default } from '../store/reducers/user';\n\nconst defaultStore = {\n    store: { ...application_default, ...common_default, ...user_default },\n    dispatch: () => {}\n};\nconst StoreContext = createContext(defaultStore);\nconst Context = () => useContext(StoreContext);\n\nexport { defaultStore, StoreContext };\nexport default Context;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useCombinedReducers from '../hooks/useCombinedReducers';\nimport { StoreContext } from '../hooks/store';\n\nconst Provider = ({ children }) => {\n    const { store, reducers } = useCombinedReducers();\n\n    const triggerDispatchs = (action) => {\n        for (let i = 0; i < reducers.length; i++) {\n            reducers[i](action);\n        }\n    };\n\n    return (\n        <StoreContext.Provider\n            value={{\n                store,\n                dispatch: triggerDispatchs\n            }}\n        >\n            {children}\n        </StoreContext.Provider>\n    );\n};\n\nProvider.propTypes = {\n    children: PropTypes.any\n};\n\nexport default Provider;\n","const home = { name: 'Home', path: '/' };\r\nconst example_page = { name: 'Example Page', path: '/example' };\r\n\r\nexport { home, example_page };\r\n","import React from 'react';\nimport { StoreContext } from '../hooks/store';\n\nconst returnPropsAsDefault = (store, props) => props;\n\nconst Connect = (mapStateToProps = returnPropsAsDefault) => (Component) => {\n    return function WrapConnect(props) {\n        return (\n            <StoreContext.Consumer>\n                {({ dispatch, store }) => {\n                    const storeProps = mapStateToProps(store, props);\n                    return <Component {...storeProps} dispatch={dispatch} />;\n                }}\n            </StoreContext.Consumer>\n        );\n    };\n};\n\nexport default Connect;\n","export default __webpack_public_path__ + \"static/media/blip-balloon.fe246cd1.svg\";","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst COLOR_NEUTRAL_DARK_ROOFTOP = '#505F79';\nconst COLOR_NEUTRAL_MEDIUM_CLOUD = '#8CA0B3';\n\nconst PageHeader = ({\n    title,\n    icon,\n    is_informative = false,\n    help_text,\n    is_back_navigation = false,\n    onBackPressed,\n    relatedOptions\n}) => {\n    const renderInfoTitle = () => (\n        <div className=\"pointer\" data-testid=\"page-header-tooltip\">\n            <bds-tooltip tooltip-text={help_text} position=\"right-center\">\n                <bds-icon\n                    name=\"info\"\n                    theme=\"solid\"\n                    color={COLOR_NEUTRAL_MEDIUM_CLOUD}\n                />\n            </bds-tooltip>\n        </div>\n    );\n\n    return (\n        <div className=\"flex flex-row items-center-ns justify-between w-100 pv3 mt2 bb bp-bc-neutral-medium-wave\">\n            <div className=\"flex items-center\">\n                {is_back_navigation && (\n                    <div\n                        className=\"pointer mr1\"\n                        onClick={onBackPressed}\n                        data-testid=\"page-header-back-icon\"\n                    >\n                        <bds-icon\n                            name=\"arrow-left\"\n                            color={COLOR_NEUTRAL_DARK_ROOFTOP}\n                        />\n                    </div>\n                )}\n\n                {!!icon && (\n                    <div data-testid=\"page-header-icon\">\n                        <bds-icon\n                            name={icon}\n                            color={COLOR_NEUTRAL_DARK_ROOFTOP}\n                        />\n                    </div>\n                )}\n\n                <h2 className=\"f3 ml2 mr1 bp-c-neutral-dark-city\">{title}</h2>\n\n                {is_informative && !!help_text && renderInfoTitle()}\n            </div>\n            {!!relatedOptions && (\n                <div className=\"flex items-center justify-end\">\n                    {relatedOptions}\n                </div>\n            )}\n        </div>\n    );\n};\n\nPageHeader.propTypes = {\n    title: Proptypes.string,\n    icon: Proptypes.string,\n    is_informative: Proptypes.bool,\n    help_text: Proptypes.string,\n    is_back_navigation: Proptypes.bool,\n    onBackPressed: Proptypes.func,\n    relatedOptions: Proptypes.any\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({\n    variant,\n    icon,\n    text,\n    arrow,\n    disabled,\n    children,\n    aria_label = 'bds-button',\n    data_testid = 'bds-button',\n    onClick = () => {}\n}) => {\n    return (\n        <bds-button\n            data-testid={data_testid}\n            aria-label={aria_label}\n            icon={icon}\n            variant={variant}\n            arrow={arrow}\n            disabled={disabled}\n            onClick={onClick}\n        >\n            {!!text ? text : children}\n        </bds-button>\n    );\n};\n\nButton.propTypes = {\n    variant: PropTypes.string,\n    icon: PropTypes.string,\n    text: PropTypes.string,\n    arrow: PropTypes.bool,\n    disabled: PropTypes.bool,\n    children: PropTypes.any,\n    aria_label: PropTypes.string,\n    data_testid: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default Button;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../../../components/PageHeader';\nimport Button from '../../../../components/Button';\n\nconst Header = ({ title, icon, onClick = () => {} }) => {\n    const renderOptions = () => (\n        <>\n            <div className=\"ml3\">\n                <Button\n                    text=\"Visit the Repository\"\n                    icon=\"link\"\n                    variant=\"ghost\"\n                    onClick={() => onClick()}\n                    data_testid=\"my-plugin-button\"\n                />\n            </div>\n        </>\n    );\n\n    return (\n        <PageHeader\n            title={title}\n            icon={icon}\n            relatedOptions={renderOptions()}\n        />\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    onSearch: PropTypes.func,\n    onClick: PropTypes.func\n};\n\nexport default Header;\n","import Home from './Home';\n\nexport default Home;\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ConnectTo from '../../store/connect';\r\nimport * as RoutesPath from '../../config/constants/routes-path';\r\n\r\nimport logo from '../../assets/images/svg/blip-balloon.svg';\r\nimport Header from './components/Header';\r\n\r\nconst PAGE_TITLE = 'Plugins Template';\r\nconst PAGE_ICON = 'plugin';\r\nconst REPOSITORY_URL =\r\n    'https://github.com/axeldouglas/cra-template-blip-plugin';\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n\r\n    const handleNavigation = useCallback(\r\n        (path, params = {}) => {\r\n            history.push(path, params);\r\n        },\r\n        [history]\r\n    );\r\n\r\n    return (\r\n        <div className=\"ph1 ph4-m ph5-ns pb5\">\r\n            <Header\r\n                title={PAGE_TITLE}\r\n                icon={PAGE_ICON}\r\n                onClick={() => window.open(REPOSITORY_URL, '_blank')}\r\n            />\r\n            <div className=\"flex flex-column items-center justify-center bp-c-neutral-dark-city f5 h-100 mt4\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p className=\"tc\">HELLO WORLD, UPFLOW!</p>\r\n                <h5 className=\"f5 b mt3 mb2\">Examples</h5>\r\n                <a\r\n                    className=\"f6 flex items-center blue no-underline underline-hover\"\r\n                    href=\"#0\"\r\n                    onClick={() =>\r\n                        handleNavigation(RoutesPath.example_page.path, {\r\n                            type: 'stored_data'\r\n                        })\r\n                    }\r\n                >\r\n                    <bds-icon name=\"file-txt-1\" size=\"x-small\" />\r\n                    Get stored data as props\r\n                </a>\r\n                <a\r\n                    className=\"f6 flex items-center blue no-underline underline-hover mt1\"\r\n                    href=\"#0\"\r\n                    onClick={() =>\r\n                        handleNavigation(RoutesPath.example_page.path, {\r\n                            type: 'swr_call'\r\n                        })\r\n                    }\r\n                >\r\n                    <bds-icon name=\"file-txt-1\" size=\"x-small\" />\r\n                    SWR fetch data\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    ...props\r\n});\r\n\r\nexport default ConnectTo(mapStateToProps)(Home);\r\n","import { IframeMessageProxy } from 'iframe-message-proxy';\r\nimport * as IMPActions from '../config/constants/iframe-message-proxy-actions';\r\nimport * as IMPContainer from '../config/constants/iframe-message-proxy-container';\r\nimport * as env from '../config/appsettings.json';\r\n\r\nconst CONFIGURATION_URL = `${env.blip.commands_url}/configuration`;\r\nconst CONTACTS_PATH = `/contacts`;\r\nconst THREADS_PATH = `/threads`;\r\nconst POST_TYPE = 'application/json';\r\n\r\nconst getApplicationData = async (full_identity = null) => {\r\n    const { response: application } = await IframeMessageProxy.sendMessage({\r\n        action: IMPActions.get_application,\r\n        content: full_identity\r\n    });\r\n    return application;\r\n};\r\n\r\nconst getConfigurationData = async () => {\r\n    const { response } = await IframeMessageProxy.sendMessage({\r\n        action: IMPContainer.Actions.send_command,\r\n        content: {\r\n            command: {\r\n                method: IMPContainer.CommandMethods.GET,\r\n                uri: CONFIGURATION_URL\r\n            }\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nconst setConfigurationData = async (payload) => {\r\n    const { response } = await IframeMessageProxy.sendMessage({\r\n        action: IMPContainer.Actions.send_command,\r\n        content: {\r\n            command: {\r\n                method: IMPContainer.CommandMethods.SET,\r\n                uri: CONFIGURATION_URL,\r\n                type: POST_TYPE,\r\n                resource: payload\r\n            }\r\n        }\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nconst getCurrentLanguage = async () => {\r\n    const { response } = await IframeMessageProxy.sendMessage({\r\n        action: IMPContainer.Actions.get_current_language\r\n    });\r\n\r\n    return response;\r\n};\r\n\r\nconst getContacts = async () => {\r\n    const {\r\n        response: { items }\r\n    } = await IframeMessageProxy.sendMessage({\r\n        action: IMPContainer.Actions.send_command,\r\n        content: {\r\n            destination: IMPContainer.Destinations.messaging_hub_service,\r\n            command: {\r\n                method: IMPContainer.CommandMethods.GET,\r\n                uri: CONTACTS_PATH\r\n            }\r\n        }\r\n    });\r\n\r\n    return items;\r\n};\r\n\r\nconst getThreads = async () => {\r\n    const {\r\n        response: { items }\r\n    } = await IframeMessageProxy.sendMessage({\r\n        action: IMPContainer.Actions.send_command,\r\n        content: {\r\n            destination: IMPContainer.Destinations.messaging_hub_service,\r\n            command: {\r\n                method: IMPContainer.CommandMethods.GET,\r\n                uri: THREADS_PATH\r\n            }\r\n        }\r\n    });\r\n\r\n    return items;\r\n};\r\n\r\nexport {\r\n    getApplicationData,\r\n    getConfigurationData,\r\n    setConfigurationData,\r\n    getCurrentLanguage,\r\n    getContacts,\r\n    getThreads\r\n};\r\n","import * as action_types from '../../config/constants/common-actions';\n\nconst setLanguage = (payload) => ({\n    type: action_types.set_language,\n    payload\n});\n\nconst setLoading = (payload) => ({\n    type: action_types.set_loading,\n    payload\n});\n\nexport { setLanguage, setLoading };\n","import Card from './Card';\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst Card = ({\r\n    title,\r\n    description,\r\n    image,\r\n    image_url = '',\r\n    image_type,\r\n    btn,\r\n    className,\r\n    children,\r\n    card_color = 'white',\r\n    text_align = 'tc',\r\n    linkable = false\r\n}) => {\r\n    const card_class = classNames({\r\n        [`bg-${card_color}`]: !!card_color,\r\n        pointer: linkable,\r\n        hoverable: linkable\r\n    });\r\n\r\n    const renderImage = () => {\r\n        let image_class = '';\r\n\r\n        switch (image_type) {\r\n            case 'cover':\r\n                image_class = classNames('w-100', 'br--top', 'br2');\r\n                break;\r\n            case 'circle':\r\n                image_class = classNames('br-100', 'h3', 'w3', 'mt2', 'mt3-ns');\r\n                break;\r\n            case 'double-ring':\r\n                image_class = classNames(\r\n                    'br-100',\r\n                    'h3',\r\n                    'w3',\r\n                    'pa1',\r\n                    'ba',\r\n                    'b--black-10',\r\n                    'mt2',\r\n                    'mt3-ns'\r\n                );\r\n                break;\r\n            case 'rounded-large':\r\n                image_class = classNames('br4', 'h3', 'w3', 'mt2', 'mt3-ns');\r\n                break;\r\n            case 'rounded':\r\n                image_class = classNames('br2', 'h3', 'w3', 'mt2', 'mt3-ns');\r\n                break;\r\n            default:\r\n                // square\r\n                image_class = classNames('h3', 'w3', 'mt2', 'mt3-ns');\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"center\">\r\n                {image_url.length ? (\r\n                    <img\r\n                        data-testid=\"card-img\"\r\n                        src={image_url}\r\n                        className={`db ${image_class}`}\r\n                        alt=\"card avatar\"\r\n                    />\r\n                ) : (\r\n                    <div className={`db ${image_class}`}>{image}</div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderBody = () => (\r\n        <div className=\"pa2 pa3-ns min-h-3\">\r\n            {!!title && (\r\n                <h6 className={`f6 b mb2 truncate ${text_align}`} title={title}>\r\n                    {title}\r\n                </h6>\r\n            )}\r\n            {!!description && (\r\n                <p className={`f6 gray mt0 mv1 ${text_align}`}>{description}</p>\r\n            )}\r\n            {!!children && children}\r\n        </div>\r\n    );\r\n\r\n    const renderFooterButton = () => {\r\n        const btn_props = {\r\n            bg_color: !!btn.bg_color ? btn.bg_color : 'white',\r\n            text_color: !!btn.text_color ? btn.text_color : 'blue'\r\n        };\r\n\r\n        const btn_class_default = classNames({\r\n            [`bg-${btn_props.bg_color}`]: true,\r\n            [`hover-${btn_props.bg_color}`]: true,\r\n            [`${btn_props.text_color}`]: true,\r\n            [`hover-bg-${btn_props.text_color}`]: true\r\n        });\r\n\r\n        const btn_class_active = classNames({\r\n            [`bg-${btn_props.text_color}`]: true,\r\n            [`${btn_props.bg_color}`]: true\r\n        });\r\n\r\n        const btn_class = classNames(\r\n            !!btn.active ? btn_class_active : btn_class_default\r\n        );\r\n\r\n        return (\r\n            <div className=\"w-100 bt bp-bc-medium-wave\">\r\n                <button\r\n                    data-testid=\"card-btn\"\r\n                    className={`w-100 link pointer tc ph3 pv3 db f6 b bg-animate b--none br3 br--bottom ${btn_class}`}\r\n                    onClick={!!btn.onClick ? btn.onClick : () => {}}\r\n                >\r\n                    {!!btn.text && btn.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <article\r\n            className={`w-100 flex flex-column ba b--black-10 br3 shadow-6 animated fade-in ${card_class} ${className}`}\r\n        >\r\n            {(!!image || !!image_url) && renderImage()}\r\n            {renderBody()}\r\n            {!!btn && renderFooterButton()}\r\n        </article>\r\n    );\r\n};\r\n\r\nCard.propTypes = {\r\n    title: PropTypes.any,\r\n    description: PropTypes.string,\r\n    image: PropTypes.any,\r\n    image_url: PropTypes.string,\r\n    image_type: PropTypes.string,\r\n    btn: PropTypes.object,\r\n    className: PropTypes.string,\r\n    children: PropTypes.any,\r\n    card_color: PropTypes.string,\r\n    text_align: PropTypes.string,\r\n    linkable: PropTypes.bool\r\n};\r\n\r\nexport default Card;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PageHeader from '../../../../components/PageHeader';\r\n\r\nconst Header = ({\r\n    title,\r\n    canRefresh = false,\r\n    onRefresh = () => {},\r\n    onClick = () => {}\r\n}) => {\r\n    const renderOptions = () => (\r\n        <button\r\n            type=\"link\"\r\n            className=\"f4 fw6 db black link dim b--none bg-transparent pointer\"\r\n            onClick={onRefresh}\r\n        >\r\n            <bds-icon name=\"refresh\" />\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <PageHeader\r\n            title={title}\r\n            is_back_navigation={true}\r\n            relatedOptions={canRefresh && renderOptions()}\r\n            onBackPressed={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    canRefresh: PropTypes.bool,\r\n    onRefresh: PropTypes.func,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Header;\r\n","import StoredData from './StoredData';\r\n\r\nexport default StoredData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ConnectTo from '../../../../store/connect';\r\nimport Card from '../../../../components/Card';\r\nimport Header from '../Header';\r\n\r\nconst StoredData = ({ appInfo, language, onClick }) => {\r\n    return (\r\n        <div className=\"ph1 ph4-m ph5-ns pb5\">\r\n            <Header title=\"Voltar\" onClick={onClick} />\r\n            <div className=\"w-50 m0 ml2-m ml3-l mb3 mb4-l mt4\">\r\n                <Card className=\"min-h-18\">\r\n                    <div className=\"overflow-auto\">\r\n                        <table className=\"f6 w-100 mw8 center\">\r\n                            <tbody className=\"lh-copy\">\r\n                                <tr>\r\n                                    <td className=\"pv3 b bb b--black-20\">\r\n                                        Name\r\n                                    </td>\r\n                                    <td className=\"pv3 bb b--black-20\">\r\n                                        {!!appInfo &&\r\n                                            !!appInfo.name &&\r\n                                            appInfo.name}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"pv3 b bb b--black-20\">\r\n                                        Short Name\r\n                                    </td>\r\n                                    <td className=\"pv3 bb b--black-20\">\r\n                                        {!!appInfo &&\r\n                                            !!appInfo.shortName &&\r\n                                            appInfo.shortName}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"pv3 b bb b--black-20\">\r\n                                        Identifier\r\n                                    </td>\r\n                                    <td className=\"pv3 bb b--black-20\">\r\n                                        {!!appInfo &&\r\n                                            !!appInfo.applicationJson &&\r\n                                            appInfo.applicationJson.identifier}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"pv3 b bb b--black-20\">\r\n                                        Language\r\n                                    </td>\r\n                                    <td className=\"pv3 bb b--black-20\">\r\n                                        {!!language && language}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nStoredData.propTypes = {\r\n    appInfo: PropTypes.object,\r\n    language: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    appInfo: state.application.appInfo,\r\n    language: state.common.language,\r\n    ...props\r\n});\r\n\r\nexport default ConnectTo(mapStateToProps)(StoredData);\r\n","import axios from 'axios';\nimport env from '../config/appsettings.json';\n\nconst HEADER_TYPE = 'Content-Type';\nconst TYPE_JSON = 'application/json; charset=utf-8';\n\nconst API = () => {\n    const api = axios.create({ baseURL: env.api_url });\n\n    api.interceptors.request.use(async (config) => {\n        const headerConfig = config;\n        headerConfig.headers.post[HEADER_TYPE] = TYPE_JSON;\n        return headerConfig;\n    });\n\n    api.interceptors.response.use(\n        (response) => {\n            return response;\n        },\n        (error) => {\n            return Promise.reject(error);\n        }\n    );\n\n    return api;\n};\n\nexport default API();\n","import useSWR from 'swr';\nimport api from '../factory/api';\n\nconst ERROR_RETRY = true;\nconst RETRY_COUNT = 3;\nconst RETRY_INTERVAL = 10000;\n\nconst useFetch = (url) => {\n    const options = {\n        shouldRetryOnError: ERROR_RETRY,\n        errorRetryCount: RETRY_COUNT,\n        errorRetryInterval: RETRY_INTERVAL\n    };\n\n    const { data, error, mutate } = useSWR(\n        url,\n        async (apiUrl) => {\n            const response = await api.get(apiUrl);\n\n            return response.data;\n        },\n        options\n    );\n\n    return { data, error, mutate };\n};\n\nexport default useFetch;\n","import production from './appsettings.json';\n\nexport default production;\n","import SwrFetchData from './SwrFetchData';\r\n\r\nexport default SwrFetchData;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ConnectTo from '../../../../store/connect';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport Card from '../../../../components/Card';\r\nimport Header from '../Header';\r\n\r\nimport env from '../../../../config';\r\n\r\nconst SwrFetchData = ({ onClick }) => {\r\n    const [id, setId] = useState(1);\r\n    const { data } = useFetch(`/pokemon/${id}`);\r\n\r\n    useEffect(() => {\r\n        handleGetPokemon();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleGetPokemon = useCallback(() => {\r\n        const pokemon_id = getRandomIntInclusive(1, 151);\r\n        setId(pokemon_id);\r\n    }, []);\r\n\r\n    const getRandomIntInclusive = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n\r\n    const getImage = (sprites) => {\r\n        if (\r\n            !Object.keys(sprites).length ||\r\n            !Object.keys(sprites.other).length ||\r\n            !Object.keys(sprites.other.dream_world).length\r\n        ) {\r\n            return env.default_plugin_image;\r\n        }\r\n        const image = sprites.other.dream_world.front_default;\r\n        return image;\r\n    };\r\n\r\n    const getType = (types) => {\r\n        if (!types.length) {\r\n            return '-';\r\n        }\r\n        const type = types[0].type.name;\r\n        return type;\r\n    };\r\n\r\n    return (\r\n        <div className=\"ph1 ph4-m ph5-ns pb5\">\r\n            <Header\r\n                title=\"Voltar\"\r\n                canRefresh={true}\r\n                onRefresh={() => handleGetPokemon()}\r\n                onClick={onClick}\r\n            />\r\n            {!!data && (\r\n                <div className=\"mw5 center mv3\">\r\n                    <Card className=\"min-h-18\">\r\n                        <div className=\"flex flex-column items-center justify-center\">\r\n                            <img\r\n                                src={getImage(data.sprites)}\r\n                                className=\"br-100 h4 w4 dib ba b--black-05 pa1 bg-black-05\"\r\n                                title={data.name}\r\n                                alt={data.name}\r\n                            />\r\n                            <h1 className=\"f3 mb2 ttc\">{data.name}</h1>\r\n                            <h2 className=\"f5 fw4 gray mt0\">\r\n                                #{`${data.id}`.padStart(3, '0')}\r\n                            </h2>\r\n                            <div className=\"w-100 flex justify-around\">\r\n                                <div className=\"flex flex-column tc\">\r\n                                    <p className=\"f5 mb2 ttc\">\r\n                                        {getType(data.types)}\r\n                                    </p>\r\n                                    <p className=\"f7 gray mt0\">Type</p>\r\n                                </div>\r\n                                <div className=\"flex flex-column tc\">\r\n                                    <p className=\"f5 mb2\">\r\n                                        {(data.weight / 10).toFixed(1)}kg\r\n                                    </p>\r\n                                    <p className=\"f7 gray mt0\">Weight</p>\r\n                                </div>\r\n                                <div className=\"flex flex-column tc\">\r\n                                    <p className=\"f5 mb2\">\r\n                                        {(data.height / 10).toFixed(1)}m\r\n                                    </p>\r\n                                    <p className=\"f7 gray mt0\">Height</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nSwrFetchData.propTypes = {\r\n    onClick: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    ...props\r\n});\r\n\r\nexport default ConnectTo(mapStateToProps)(SwrFetchData);\r\n","const sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\nexport default sleep;\r\n","import Example from './Example';\r\n\r\nexport default Example;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ConnectTo from '../../store/connect';\r\n\r\nimport * as ApplicationService from '../../services/application-service';\r\nimport { withLoading } from '../../services/common-service';\r\n\r\nimport * as ApplicationActions from '../../store/actions/application';\r\nimport * as CommonActions from '../../store/actions/common';\r\n\r\nimport StoredData from './components/StoredData';\r\nimport SwrFetchData from './components/SwrFetchData';\r\n\r\nimport sleep from '../../utils/sleep';\r\n\r\nconst DELAY_TIME = 600;\r\n\r\nconst Example = ({ dispatch }) => {\r\n    const history = useHistory();\r\n    const { state } = useLocation();\r\n    const [example, setExample] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!!state) {\r\n            const { type } = state;\r\n            if (!!type) {\r\n                setExample(type);\r\n            }\r\n        }\r\n    }, [state]);\r\n\r\n    useEffect(() => {\r\n        getInitialInfo();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getInitialInfo = () => {\r\n        withLoading(async () => {\r\n            const app_data = await ApplicationService.getApplicationData();\r\n            if (!!app_data) {\r\n                await dispatch(ApplicationActions.setApplication(app_data));\r\n            }\r\n\r\n            const language = await ApplicationService.getCurrentLanguage();\r\n            if (!!language) {\r\n                await dispatch(CommonActions.setLanguage(language));\r\n            }\r\n\r\n            await sleep(DELAY_TIME);\r\n        });\r\n    };\r\n\r\n    const handleNavigation = useCallback(() => {\r\n        history.push('/');\r\n    }, [history]);\r\n\r\n    return example === 'stored_data' ? (\r\n        <StoredData onClick={() => handleNavigation()} />\r\n    ) : (\r\n        <SwrFetchData onClick={() => handleNavigation()} />\r\n    );\r\n};\r\n\r\nExample.propTypes = {\r\n    dispatch: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    ...props\r\n});\r\n\r\nexport default ConnectTo(mapStateToProps)(Example);\r\n","import * as action_types from '../../config/constants/application-actions';\n\nconst setApplication = (payload) => ({\n    type: action_types.set_application,\n    payload\n});\n\nconst setConfiguration = (payload) => ({\n    type: action_types.set_configuration,\n    payload\n});\n\nexport { setApplication, setConfiguration };\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { page } from '../services/analytics';\nimport * as RoutesPath from '../config/constants/routes-path';\nimport env from '../config';\n\nconst Analytics = ({ children }) => {\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!!env.segment_key) {\n            return history.listen((location) => {\n                const { pathname, state } = location;\n                const title = getPageTitle(pathname);\n                page(title, { state });\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [history]);\n\n    const getPageTitle = (pathname) => {\n        return Object.keys(RoutesPath)\n            .filter((item) => RoutesPath[item].path === pathname)\n            .reduce((t, item) => {\n                return RoutesPath[item].name;\n            }, '');\n    };\n\n    return <Fragment>{children}</Fragment>;\n};\n\nAnalytics.propTypes = {\n    children: PropTypes.any\n};\n\nexport default Analytics;\n","import env from '../config';\n\nconst load = () => {\n    if (!!env.segment_key) {\n        window.analytics.load(env.segment_key);\n    }\n};\n\nconst page = (\n    name = '',\n    properties = {},\n    options = {},\n    callback = () => {}\n) => {\n    if (!!env.segment_key) {\n        window.analytics.page(name, properties, options, callback);\n    }\n};\n\nconst track = (\n    event = '',\n    properties = {},\n    options = {},\n    callback = () => {}\n) => {\n    if (!!env.segment_key) {\n        window.analytics.track(event, properties, options, callback);\n    }\n};\n\nconst trackForm = (form, event = '', properties = {}) => {\n    if (!!env.segment_key) {\n        window.analytics.trackForm(form, event, properties);\n    }\n};\n\nconst identify = (\n    user_id = '',\n    traits = {},\n    options = {},\n    callback = () => {}\n) => {\n    if (!!env.segment_key) {\n        window.analytics.identify(user_id, traits, options, callback);\n    }\n};\n\nexport { load, page, track, trackForm, identify };\n","import Routes from './Routes';\n\nexport default Routes;\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport * as RoutesPath from '../config/constants/routes-path';\r\n\r\nimport HomePage from '../pages/Home';\r\nimport ExamplePage from '../pages/Example';\r\n\r\nimport Analytics from './Analytics';\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Analytics>\r\n            <Switch>\r\n                <Route exact path={RoutesPath.home.path} component={HomePage} />\r\n                <Route\r\n                    exact\r\n                    path={RoutesPath.example_page.path}\r\n                    component={ExamplePage}\r\n                />\r\n            </Switch>\r\n        </Analytics>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Provider from './store';\nimport Routes from './routes';\nimport { load, identify } from './services/analytics';\nimport { showToast } from './services/common-service';\nimport * as BlipPortalToastTypes from './config/constants/blip-portal-toast-types';\n\nconst App = () => {\n    // segment analytics\n    load();\n    identify();\n\n    showToast({\n        type: BlipPortalToastTypes.success,\n        message: 'Carregado com sucesso'\n    });\n\n    return (\n        <Provider>\n            <Routes />\n        </Provider>\n    );\n};\n\nexport default App;\n","const info = 'info';\nconst success = 'success';\nconst warning = 'warning';\nconst danger = 'danger';\nconst refresh = 'refresh';\n\nexport { info, success, warning, danger, refresh };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IframeMessageProxy } from 'iframe-message-proxy';\nimport { ResizeObserver } from 'resize-observer';\nimport { applyPolyfills, defineCustomElements } from 'blip-ds/loader';\nimport { setHeight } from './services/common-service';\nimport './assets/styles/app.scss';\nimport App from './App';\n\nIframeMessageProxy.listen();\n\nconst ROOT_ID = 'root';\nconst ROOT_DIV = document.getElementById(ROOT_ID);\nconst DOCUMENT_OBSERVER = new ResizeObserver(() => {\n    setHeight(ROOT_DIV.scrollHeight);\n});\nDOCUMENT_OBSERVER.observe(ROOT_DIV);\n\nReactDOM.render(<App />, document.getElementById(ROOT_ID));\n\napplyPolyfills().then(() => {\n    defineCustomElements(window);\n});\n"],"sourceRoot":""}